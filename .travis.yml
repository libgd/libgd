# Travis build integration.
# https://docs.travis-ci.com/

language: cpp
compiler:
  - clang
  - gcc

env:
  global:
   # COVERITY_SCAN_TOKEN
   - secure: "h7NGklk0xX2iuY5PgxijE7FFEgd95hxbhSwofs+hzYIiW6FR2kk8gSwEqRH5dYGnvazGT3a7fjxuYAr0y5BQCfV7yyQISl19rYZPJbP9bTxGxijTGlItyQqVTXCaucuXzgJbAOgC1W3ja4lYODflCyFzHhPggJLkXEAw1FF3+5M="

sudo: false

os:
  - linux
  - osx

matrix:
  include:
    - os: linux
      compiler: clang
      env: TRAVIS_BUILD_TYPE=sanitizers
    - os: linux
      compiler: gcc
      env: TRAVIS_BUILD_TYPE=coverage

script: ./travis/main.sh

before_install:
  - pip install --user 'requests[security]'
  - pip install --user cpp-coveralls

addons:
  apt:
    packages:
    - nasm
    - naturaldocs
    - libpng-dev
    - libz-dev
    - libjpeg-dev
    - libfreetype6-dev
    - libxpm-dev
    - libx11-dev
    - libxt-dev
    - libfontconfig-dev
    - libvpx-dev
    - libtiff-dev
    - libwebp-dev
    - automake
    - autoconf
    - libtool
    - html2text

  coverity_scan:

    # GitHub project metadata
    # ** specific to your project **
    project:
      name: "libgd/libgd"
      version: 2.2.2
      description: "GD Graphics Library"
    notification_email: pierre.php@gmail.com

    # Where email notification of build analysis results will be sent
    # notification_email: scan_notifications@example.com

    # Commands to prepare for build_command
    # ** likely specific to your build **
    build_command_prepend: "autoreconf -fi && ./configure"

    # The command that will be added as an argument to "cov-build" to compile your project for analysis,
    # ** likely specific to your build **
    build_command: "make"

    # Pattern to match selecting branches that will run analysis. We recommend leaving this set to 'coverity_scan'.
    # Take care in resource usage, and consider the build frequency allowances per
    #   https://scan.coverity.com/faq#frequency
    branch_pattern: GD-2.2
